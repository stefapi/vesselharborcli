{
  "openapi": "3.1.0",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/login": {
      "post": {
        "summary": "Authentifier un utilisateur",
        "operationId": "login_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": { "$ref": "#/components/schemas/Body_login_login_post" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Login Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "Se déconnecter",
        "operationId": "logout_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Logout Logout Post"
                }
              }
            }
          }
        }
      }
    },
    "/refresh-token": {
      "post": {
        "summary": "Renouveler le token",
        "operationId": "refresh_token_refresh_token_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Refresh Token Refresh Token Post"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Profil utilisateur connecté",
        "operationId": "get_me_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOut" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerOrKey": [] }]
      }
    },
    "/users/reset_password_request": {
      "post": {
        "summary": "Demander une réinitialisation de mot de passe",
        "operationId": "reset_password_request_users_reset_password_request_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PasswordResetRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Reset Password Request Users Reset Password Request Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/reset_password": {
      "post": {
        "summary": "Réinitialiser le mot de passe",
        "operationId": "reset_password_users_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PasswordReset" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Reset Password Users Reset Password Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["users"],
        "summary": "Créer un utilisateur",
        "operationId": "create_user_users_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create User Users Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["users"],
        "summary": "Lister les utilisateurs",
        "operationId": "list_users_users_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Users Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["users"],
        "summary": "Obtenir un utilisateur",
        "operationId": "get_user_users__user_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Mettre à jour les informations d’un utilisateur",
        "operationId": "update_user_users__user_id__put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update User Users  User Id  Put"
                }
              }
            }
          },
          "403": { "description": "Modification non autorisée" },
          "404": { "description": "Utilisateur non trouvé" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Supprimer un utilisateur",
        "operationId": "delete_user_users__user_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete User Users  User Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/password": {
      "put": {
        "tags": ["users"],
        "summary": "Changer le mot de passe",
        "operationId": "change_password_users__user_id__password_put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChangePassword" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Change Password Users  User Id  Password Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/superadmin": {
      "put": {
        "tags": ["users"],
        "summary": "Modifier statut superadmin",
        "operationId": "change_superadmin_users__user_id__superadmin_put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChangeSuperadmin" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Change Superadmin Users  User Id  Superadmin Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/assignments": {
      "get": {
        "tags": ["users"],
        "summary": "Lister affectations",
        "operationId": "list_user_assignments_users__user_id__assignments_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List User Assignments Users  User Id  Assignments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/groups": {
      "get": {
        "tags": ["users"],
        "summary": "Groupes du user",
        "operationId": "list_user_groups_users__user_id__groups_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List User Groups Users  User Id  Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user_groups"],
        "summary": "Ajouter un utilisateur à un groupe",
        "operationId": "add_user_to_group_users__user_id__groups_post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add User To Group Users  User Id  Groups Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/policies": {
      "get": {
        "tags": ["users"],
        "summary": "Policies du user",
        "operationId": "list_user_policies_users__user_id__policies_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List User Policies Users  User Id  Policies Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/organizations": {
      "get": {
        "tags": ["users"],
        "summary": "Organisations du user",
        "operationId": "list_user_organizations_users__user_id__organizations_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List User Organizations Users  User Id  Organizations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/tags": {
      "get": {
        "tags": ["users"],
        "summary": "Lister les tags d'un utilisateur",
        "operationId": "list_user_tags_users__user_id__tags_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List User Tags Users  User Id  Tags Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/tags/{tag_id}": {
      "post": {
        "tags": ["users"],
        "summary": "Associer un tag à un utilisateur",
        "operationId": "add_tag_to_user_users__user_id__tags__tag_id__post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add Tag To User Users  User Id  Tags  Tag Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Dissocier un tag d'un utilisateur",
        "operationId": "remove_tag_from_user_users__user_id__tags__tag_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove Tag From User Users  User Id  Tags  Tag Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/groups/{group_id}": {
      "delete": {
        "tags": ["user_groups"],
        "summary": "Retirer un utilisateur d'un groupe",
        "operationId": "remove_user_from_group_users__user_id__groups__group_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          },
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove User From Group Users  User Id  Groups  Group Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": ["organizations"],
        "summary": "List Organizations",
        "operationId": "list_organizations_organizations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Organizations Organizations Get"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerOrKey": [] }]
      },
      "post": {
        "tags": ["organizations"],
        "summary": "Create Organization",
        "operationId": "create_organization_organizations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrganizationCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Organization Organizations Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerOrKey": [] }]
      }
    },
    "/organizations/{org_id}": {
      "get": {
        "tags": ["organizations"],
        "summary": "Get Organization",
        "operationId": "get_organization_organizations__org_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Organization Organizations  Org Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["organizations"],
        "summary": "Update Organization",
        "operationId": "update_organization_organizations__org_id__put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrganizationUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Organization Organizations  Org Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["organizations"],
        "summary": "Delete Organization",
        "operationId": "delete_organization_organizations__org_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Organization Organizations  Org Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{org_id}/users/{user_id}": {
      "post": {
        "tags": ["organizations"],
        "summary": "Add User To Organization",
        "operationId": "add_user_to_organization_organizations__org_id__users__user_id__post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add User To Organization Organizations  Org Id  Users  User Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["organizations"],
        "summary": "Remove User From Organization",
        "operationId": "remove_user_from_organization_organizations__org_id__users__user_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove User From Organization Organizations  Org Id  Users  User Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{org_id}/tags": {
      "get": {
        "tags": ["organizations"],
        "summary": "List Organization Tags",
        "operationId": "list_organization_tags_organizations__org_id__tags_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Organization Tags Organizations  Org Id  Tags Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["organizations"],
        "summary": "Add Tag To Organization",
        "operationId": "add_tag_to_organization_organizations__org_id__tags_post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Value" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add Tag To Organization Organizations  Org Id  Tags Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{org_id}/tags/{tag_id}": {
      "delete": {
        "tags": ["organizations"],
        "summary": "Remove Tag From Organization",
        "operationId": "remove_tag_from_organization_organizations__org_id__tags__tag_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove Tag From Organization Organizations  Org Id  Tags  Tag Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{org_id}/policies": {
      "get": {
        "tags": ["organizations"],
        "summary": "List Organization Policies",
        "operationId": "list_organization_policies_organizations__org_id__policies_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Organization Policies Organizations  Org Id  Policies Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{org_id}/groups": {
      "get": {
        "tags": ["organizations"],
        "summary": "List Organization Groups",
        "operationId": "list_organization_groups_organizations__org_id__groups_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Organization Groups Organizations  Org Id  Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{org_id}/environments": {
      "get": {
        "tags": ["organizations"],
        "summary": "List Organization Environments",
        "operationId": "list_organization_environments_organizations__org_id__environments_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Organization Environments Organizations  Org Id  Environments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/environments": {
      "get": {
        "tags": ["environments"],
        "summary": "Lister les environnements",
        "description": "Liste les environnements filtrés par nom ou organisation (superadmins voient tout, les autres uniquement ce qu’ils ont le droit de lire).",
        "operationId": "list_environments_environments_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Name"
            }
          },
          {
            "name": "organization_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Organization Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Environments Environments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["environments"],
        "summary": "Créer un environnement",
        "description": "Crée un environnement rattaché à une organisation. Associe une policy d’admin au créateur si nécessaire.",
        "operationId": "create_environment_environments_post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EnvironmentCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Environment Environments Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/environments/{environment_id}": {
      "get": {
        "tags": ["environments"],
        "summary": "Détail d’un environnement",
        "description": "Renvoie les détails d’un environnement si l’utilisateur y a accès.",
        "operationId": "get_environment_environments__environment_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Environment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Environment Environments  Environment Id  Get"
                }
              }
            }
          },
          "404": { "description": "Environnement non trouvé" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "summary": "Mettre à jour un environnement",
        "description": "Met à jour un environnement s’il existe et si l’utilisateur a les droits.",
        "operationId": "update_environment_environments__environment_id__put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Environment Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EnvironmentCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Environment Environments  Environment Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "summary": "Supprimer un environnement",
        "description": "Supprime un environnement si l’utilisateur a les droits requis.",
        "operationId": "delete_environment_environments__environment_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Environment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Environment Environments  Environment Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/environments/generate-name": {
      "get": {
        "tags": ["environments"],
        "summary": "Générer un nom aléatoire",
        "description": "Génère un nom unique à partir d’un animal ou d’un adjectif.",
        "operationId": "generate_environment_codename_environments_generate_name_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "prefix_length",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 6,
              "minimum": 0,
              "default": 0,
              "title": "Prefix Length"
            }
          },
          {
            "name": "use_adjective",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Use Adjective"
            }
          },
          {
            "name": "use_adverb",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Use Adverb"
            }
          },
          {
            "name": "suffix_length",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 6,
              "minimum": 0,
              "default": 0,
              "title": "Suffix Length"
            }
          },
          {
            "name": "separator",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 2,
              "default": "-",
              "title": "Separator"
            }
          },
          {
            "name": "style",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Style"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Generate Environment Codename Environments Generate Name Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/environments/{environment_id}/users": {
      "get": {
        "tags": ["environments"],
        "summary": "Utilisateurs liés à un environnement",
        "description": "Renvoie tous les utilisateurs ayant accès à un environnement via une policy (via les rules).",
        "operationId": "get_environment_users_environments__environment_id__users_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Environment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Environment Users Environments  Environment Id  Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}": {
      "get": {
        "tags": ["groups"],
        "summary": "Détail d'un groupe",
        "operationId": "get_group_groups__group_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Group Groups  Group Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["groups"],
        "summary": "Mettre à jour un groupe",
        "operationId": "update_group_groups__group_id__put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GroupUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Group Groups  Group Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["groups"],
        "summary": "Supprimer un groupe",
        "operationId": "delete_group_groups__group_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Group Groups  Group Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/groups/{organization_id}": {
      "post": {
        "tags": ["groups"],
        "summary": "Créer un groupe",
        "operationId": "create_group_groups__organization_id__post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Organization Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GroupCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Group Groups  Organization Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": ["groups"],
        "summary": "Lister tous les groupes",
        "operationId": "list_all_groups_groups_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List All Groups Groups Get"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerOrKey": [] }]
      }
    },
    "/groups/organization/{org_id}": {
      "get": {
        "tags": ["groups"],
        "summary": "Lister les groupes d'une organisation",
        "operationId": "list_groups_by_org_groups_organization__org_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Org Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Groups By Org Groups Organization  Org Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/users": {
      "get": {
        "tags": ["groups"],
        "summary": "Lister les utilisateurs d'un groupe",
        "operationId": "list_group_users_groups__group_id__users_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Group Users Groups  Group Id  Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/users/{user_id}": {
      "post": {
        "tags": ["groups"],
        "summary": "Associer un utilisateur",
        "operationId": "assign_user_groups__group_id__users__user_id__post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assign User Groups  Group Id  Users  User Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["groups"],
        "summary": "Retirer un utilisateur",
        "operationId": "remove_user_groups__group_id__users__user_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove User Groups  Group Id  Users  User Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/policy": {
      "get": {
        "tags": ["groups"],
        "summary": "Lister les policies d'un groupe",
        "operationId": "list_group_policies_groups__group_id__policy_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Group Policies Groups  Group Id  Policy Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["groups"],
        "summary": "Associer une policy",
        "operationId": "assign_policy_groups__group_id__policy_post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          },
          {
            "name": "policy_id",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Assign Policy Groups  Group Id  Policy Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/policy/{policy_id}": {
      "delete": {
        "tags": ["groups"],
        "summary": "Retirer une policy",
        "operationId": "remove_policy_groups__group_id__policy__policy_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          },
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove Policy Groups  Group Id  Policy  Policy Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/tags": {
      "get": {
        "tags": ["groups"],
        "summary": "Lister les tags d'un groupe",
        "operationId": "list_group_tags_groups__group_id__tags_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Group Tags Groups  Group Id  Tags Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/groups/{group_id}/tags/{tag_id}": {
      "post": {
        "tags": ["groups"],
        "summary": "Ajouter un tag à un groupe",
        "operationId": "add_tag_to_group_groups__group_id__tags__tag_id__post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add Tag To Group Groups  Group Id  Tags  Tag Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["groups"],
        "summary": "Retirer un tag d'un groupe",
        "operationId": "remove_tag_from_group_groups__group_id__tags__tag_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove Tag From Group Groups  Group Id  Tags  Tag Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/elements/{environment_id}": {
      "post": {
        "tags": ["elements"],
        "summary": "Créer un élément",
        "description": "Crée un élément dans un environnement donné.",
        "operationId": "create_element_elements__environment_id__post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Environment Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ElementCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Element Elements  Environment Id  Post"
                }
              }
            }
          },
          "403": { "description": "Permission insuffisante" },
          "404": { "description": "Environnement non trouvé" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/elements/{element_id}": {
      "get": {
        "tags": ["elements"],
        "summary": "Récupérer un élément",
        "description": "Renvoie les informations d'un élément spécifique.",
        "operationId": "get_element_elements__element_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "element_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Element Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Element Elements  Element Id  Get"
                }
              }
            }
          },
          "403": { "description": "Permission insuffisante" },
          "404": { "description": "Élément non trouvé" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["elements"],
        "summary": "Mettre à jour un élément",
        "description": "Modifie les informations d'un élément.",
        "operationId": "update_element_elements__element_id__put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "element_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Element Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ElementUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Element Elements  Element Id  Put"
                }
              }
            }
          },
          "403": { "description": "Permission insuffisante" },
          "404": { "description": "Élément non trouvé" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["elements"],
        "summary": "Supprimer un élément",
        "description": "Supprime un élément donné.",
        "operationId": "delete_element_elements__element_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "element_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Element Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Element Elements  Element Id  Delete"
                }
              }
            }
          },
          "403": { "description": "Permission insuffisante" },
          "404": { "description": "Élément non trouvé" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/elements/environment/{environment_id}": {
      "get": {
        "tags": ["elements"],
        "summary": "Lister les éléments d'un environnement",
        "description": "Liste les éléments d'un environnement avec pagination et filtrage par nom.",
        "operationId": "list_elements_elements_environment__environment_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Environment Id" }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Elements Elements Environment  Environment Id  Get"
                }
              }
            }
          },
          "403": { "description": "Permission insuffisante" },
          "404": { "description": "Environnement non trouvé" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/policies": {
      "get": {
        "tags": ["policies"],
        "summary": "List Policies",
        "operationId": "list_policies_policies_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Organization Id" }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Policies Policies Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["policies"],
        "summary": "Create Policy",
        "operationId": "create_policy_policies_post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PolicyCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Policy Policies Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/policies/{policy_id}": {
      "get": {
        "tags": ["policies"],
        "summary": "Get Policy",
        "operationId": "get_policy_policies__policy_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Policy Policies  Policy Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["policies"],
        "summary": "Update Policy",
        "operationId": "update_policy_policies__policy_id__put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PolicyUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Policy Policies  Policy Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["policies"],
        "summary": "Delete Policy",
        "operationId": "delete_policy_policies__policy_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Policy Policies  Policy Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/policies/{policy_id}/users/{user_id}": {
      "post": {
        "tags": ["policies"],
        "summary": "Add User",
        "operationId": "add_user_policies__policy_id__users__user_id__post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add User Policies  Policy Id  Users  User Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["policies"],
        "summary": "Remove User",
        "operationId": "remove_user_policies__policy_id__users__user_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove User Policies  Policy Id  Users  User Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/policies/{policy_id}/groups/{group_id}": {
      "post": {
        "tags": ["policies"],
        "summary": "Add Group",
        "operationId": "add_group_policies__policy_id__groups__group_id__post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          },
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add Group Policies  Policy Id  Groups  Group Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["policies"],
        "summary": "Remove Group",
        "operationId": "remove_group_policies__policy_id__groups__group_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          },
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Group Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove Group Policies  Policy Id  Groups  Group Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/policies/{policy_id}/tags/{tag_id}": {
      "post": {
        "tags": ["policies"],
        "summary": "Add Tag",
        "operationId": "add_tag_policies__policy_id__tags__tag_id__post",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add Tag Policies  Policy Id  Tags  Tag Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["policies"],
        "summary": "Remove Tag",
        "operationId": "remove_tag_policies__policy_id__tags__tag_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Remove Tag Policies  Policy Id  Tags  Tag Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/rules/policy/{policy_id}": {
      "get": {
        "tags": ["rules"],
        "summary": "List Rules",
        "operationId": "list_rules_rules_policy__policy_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Policy Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Rules Rules Policy  Policy Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/rules/{rule_id}": {
      "get": {
        "tags": ["rules"],
        "summary": "Get Rule",
        "operationId": "get_rule_rules__rule_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Rule Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Rule Rules  Rule Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["rules"],
        "summary": "Update Rule",
        "operationId": "update_rule_rules__rule_id__put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Rule Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RuleUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Rule Rules  Rule Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["rules"],
        "summary": "Delete Rule",
        "operationId": "delete_rule_rules__rule_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Rule Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Rule Rules  Rule Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/rules": {
      "post": {
        "tags": ["rules"],
        "summary": "Create Rule",
        "operationId": "create_rule_rules_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RuleCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Rule Rules Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerOrKey": [] }]
      }
    },
    "/functions": {
      "get": {
        "tags": ["functions"],
        "summary": "Lister les fonctions",
        "description": "Renvoie toutes les fonctions si l'utilisateur a les droits requis.",
        "operationId": "list_functions_functions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Functions Functions Get"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerOrKey": [] }]
      },
      "post": {
        "tags": ["functions"],
        "summary": "Créer une fonction",
        "description": "Crée une nouvelle fonction.",
        "operationId": "create_function_functions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FunctionCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Function Functions Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerOrKey": [] }]
      }
    },
    "/functions/{function_id}": {
      "get": {
        "tags": ["functions"],
        "summary": "Récupérer une fonction",
        "description": "Renvoie les informations d'une fonction spécifique.",
        "operationId": "get_function_functions__function_id__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Function Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Function Functions  Function Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["functions"],
        "summary": "Mettre à jour une fonction",
        "description": "Met à jour une fonction existante.",
        "operationId": "update_function_functions__function_id__put",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Function Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FunctionUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Update Function Functions  Function Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["functions"],
        "summary": "Supprimer une fonction",
        "description": "Supprime une fonction.",
        "operationId": "delete_function_functions__function_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Function Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Function Functions  Function Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": ["tags"],
        "summary": "Lister tous les tags",
        "description": "Renvoie la liste de tous les tags si l'utilisateur a les droits sur leur organisation.",
        "operationId": "list_tags_tags_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Tags Tags Get"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerOrKey": [] }]
      },
      "post": {
        "tags": ["tags"],
        "summary": "Créer un tag",
        "description": "Crée un nouveau tag. L'utilisateur doit avoir les droits sur une organisation spécifique.",
        "operationId": "create_tag_tags_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Tag Tags Post"
                }
              }
            }
          },
          "400": { "description": "Tag existant" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearerOrKey": [] }]
      }
    },
    "/tags/{tag_id}": {
      "delete": {
        "tags": ["tags"],
        "summary": "Supprimer un tag",
        "description": "Supprime un tag s'il est autorisé.",
        "operationId": "delete_tag_tags__tag_id__delete",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Tag Tags  Tag Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/tags/{tag_id}/groups": {
      "get": {
        "tags": ["tags"],
        "summary": "Groupes liés à un tag",
        "description": "Renvoie les groupes associés à un tag.",
        "operationId": "get_tag_groups_tags__tag_id__groups_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Tag Groups Tags  Tag Id  Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/tags/{tag_id}/users": {
      "get": {
        "tags": ["tags"],
        "summary": "Utilisateurs liés à un tag",
        "description": "Renvoie les utilisateurs associés à un tag.",
        "operationId": "get_tag_users_tags__tag_id__users_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Tag Users Tags  Tag Id  Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/tags/{tag_id}/policies": {
      "get": {
        "tags": ["tags"],
        "summary": "Policies liées à un tag",
        "description": "Renvoie les policies associées à un tag.",
        "operationId": "get_tag_policies_tags__tag_id__policies_get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Tag Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Tag Policies Tags  Tag Id  Policies Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/audit-logs/": {
      "get": {
        "tags": ["audit_logs"],
        "summary": "Lister les logs d'audit",
        "description": "Liste les logs d'audit avec pagination et filtrage par action et user_id (accessible uniquement par superadmin).",
        "operationId": "list_audit_logs_audit_logs__get",
        "security": [{ "OAuth2PasswordBearerOrKey": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Action"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Audit Logs Audit Logs  Get"
                }
              }
            }
          },
          "403": { "description": "Non autorisé" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/coffee/": {
      "get": {
        "tags": ["coffee"],
        "summary": "I'm a teapot",
        "description": "Returns a 418 I'm a teapot status code, as per RFC 2324.",
        "operationId": "im_a_teapot_coffee__get",
        "responses": {
          "418": {
            "description": "I'm a teapot",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Im A Teapot Coffee  Get"
                }
              }
            }
          }
        }
      }
    },
    "/health/": {
      "get": {
        "tags": ["health"],
        "summary": "Health Check",
        "description": "Returns a 200 OK status code if the service is running. Used for Kubernetes/Docker health checks.",
        "operationId": "health_check_health__get",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Check Health  Get"
                }
              }
            }
          },
          "503": { "description": "Service is unhealthy" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "^password$" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login_login_post"
      },
      "ChangePassword": {
        "properties": {
          "old_password": { "type": "string", "title": "Old Password" },
          "new_password": { "type": "string", "title": "New Password" }
        },
        "type": "object",
        "required": ["old_password", "new_password"],
        "title": "ChangePassword"
      },
      "ChangeSuperadmin": {
        "properties": {
          "is_superadmin": { "type": "boolean", "title": "Is Superadmin" }
        },
        "type": "object",
        "required": ["is_superadmin"],
        "title": "ChangeSuperadmin"
      },
      "ElementCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "environment_id": { "type": "integer", "title": "Environment Id" }
        },
        "type": "object",
        "required": ["name", "environment_id"],
        "title": "ElementCreate"
      },
      "ElementUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["name", "description"],
        "title": "ElementUpdate"
      },
      "EnvironmentCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "organization_id": { "type": "integer", "title": "Organization Id" }
        },
        "type": "object",
        "required": ["name", "organization_id"],
        "title": "EnvironmentCreate"
      },
      "FunctionCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "FunctionCreate"
      },
      "FunctionUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["name", "description"],
        "title": "FunctionUpdate"
      },
      "GroupCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "organization_id": { "type": "integer", "title": "Organization Id" }
        },
        "type": "object",
        "required": ["name", "organization_id"],
        "title": "GroupCreate"
      },
      "GroupUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "GroupUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "OrganizationCreate": {
        "properties": {
          "name": { "type": "string", "maxLength": 80, "title": "Name" },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 1024 },
              { "type": "null" }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "OrganizationCreate"
      },
      "OrganizationUpdate": {
        "properties": {
          "name": { "type": "string", "maxLength": 80, "title": "Name" },
          "description": {
            "anyOf": [
              { "type": "string", "maxLength": 1024 },
              { "type": "null" }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "OrganizationUpdate"
      },
      "PasswordReset": {
        "properties": {
          "token": { "type": "string", "title": "Token" },
          "new_password": { "type": "string", "title": "New Password" }
        },
        "type": "object",
        "required": ["token", "new_password"],
        "title": "PasswordReset"
      },
      "PasswordResetRequest": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" }
        },
        "type": "object",
        "required": ["email"],
        "title": "PasswordResetRequest"
      },
      "PolicyCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "access_schedule": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Access Schedule"
          },
          "organization_id": { "type": "integer", "title": "Organization Id" }
        },
        "type": "object",
        "required": ["name", "organization_id"],
        "title": "PolicyCreate"
      },
      "PolicyUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "access_schedule": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Access Schedule"
          }
        },
        "type": "object",
        "title": "PolicyUpdate"
      },
      "RuleCreate": {
        "properties": {
          "policy_id": { "type": "integer", "title": "Policy Id" },
          "function_id": { "type": "integer", "title": "Function Id" },
          "environment_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Environment Id"
          },
          "element_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Element Id"
          }
        },
        "type": "object",
        "required": ["policy_id", "function_id"],
        "title": "RuleCreate"
      },
      "RuleUpdate": {
        "properties": {
          "function_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Function Id"
          },
          "environment_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Environment Id"
          },
          "element_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Element Id"
          }
        },
        "type": "object",
        "title": "RuleUpdate"
      },
      "TagCreate": {
        "properties": {
          "value": { "type": "string", "maxLength": 80, "title": "Value" },
          "organization_id": { "type": "integer", "title": "Organization Id" }
        },
        "type": "object",
        "required": ["value", "organization_id"],
        "title": "TagCreate"
      },
      "TagOut": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "value": { "type": "string", "title": "Value" }
        },
        "type": "object",
        "required": ["id", "value"],
        "title": "TagOut"
      },
      "UserCreate": {
        "properties": {
          "username": { "type": "string", "title": "Username" },
          "first_name": { "type": "string", "title": "First Name" },
          "last_name": { "type": "string", "title": "Last Name" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "password": { "type": "string", "title": "Password" },
          "is_superadmin": {
            "type": "boolean",
            "title": "Is Superadmin",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "username",
          "first_name",
          "last_name",
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserOut": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "username": { "type": "string", "title": "Username" },
          "first_name": { "type": "string", "title": "First Name" },
          "last_name": { "type": "string", "title": "Last Name" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "is_superadmin": { "type": "boolean", "title": "Is Superadmin" },
          "tags": {
            "items": { "$ref": "#/components/schemas/TagOut" },
            "type": "array",
            "title": "Tags",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "first_name",
          "last_name",
          "email",
          "is_superadmin"
        ],
        "title": "UserOut"
      },
      "UserUpdate": {
        "properties": {
          "first_name": { "type": "string", "title": "First Name" },
          "last_name": { "type": "string", "title": "Last Name" },
          "username": { "type": "string", "title": "Username" },
          "email": { "type": "string", "format": "email", "title": "Email" }
        },
        "type": "object",
        "required": ["first_name", "last_name", "username", "email"],
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearerOrKey": {
        "type": "oauth2",
        "flows": { "password": { "scopes": {}, "tokenUrl": "/login" } }
      }
    }
  }
}
